/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package rentalbarang;
import java.awt.Dimension; //Untuk mendapatkan dimensi lebar atau tinggi suatu komponen dalam int atau double.
import java.awt.Toolkit; //Salah satu fungsinya Untuk mendapatkan ukuran jendela.
import java.awt.event.KeyEvent; //Mampu menerima inputan yang berasal dari KeyBoard
import java.sql.Connection; //Mengkoneksikan java dengan SQL.
import java.sql.PreparedStatement; // Prepared statement memungkinkan pengguna untuk mengganti nilai parameter dalam string syntaks SQL dengan ?.
import java.sql.Statement; // Statement hanya memungkinkan pengguna untuk mengirim syntaks SQL tanpa bisa mengubah nilai parameter.
import java.sql.ResultSet; // ResultSet memungkinkan Anda untuk mengakses baris-baris data yang dikembalikan oleh query SELECT dan melakukan operasi
                           //seperti membaca nilai-nilai kolom, memperbarui data, atau melakukan iterasi melalui hasil.
import java.sql.SQLException; // Untuk menangani kesalahan-kesalahan yang mungkin terjadi saat pengolahan database
import java.text.ParseException; // Untuk penanganan kesalahan saat parsing (mengubah) representasi string dari objek menjadi bentuk objek yang sesuai dengan tipe data tertentu.
import javax.swing.JOptionPane; //Untuk menyediakan jendela dialog.
import javax.swing.table.DefaultTableModel; //menyimpan dan mengelola data tabular dalam bentuk tabel yang dapat ditampilkan dalam komponen seperti JTable. 

/**
 *
 * @author Kelompok 8
 */
public class frmAdmin extends javax.swing.JFrame {
    
    //Memmbuat variabel untuk koneksi, NPM, dan tabel
    String NPM;
    public Connection con;
    public Statement st;
    public ResultSet rs;
    public DefaultTableModel model;
    
    
    /**
     * Creates new form frmAdmin
     */
    public frmAdmin() {
        initComponents();
        
        // Untuk membuat ukuran jendela berada di tengah dan menyesuaikan ukuran layar laptop pengguna
        Dimension layar = Toolkit.getDefaultToolkit().getScreenSize();
        int x = layar.width / 2 - this.getSize().width / 2;
        int y = layar.height / 2 - this.getSize().height / 2;
        this.setLocation(x,y);
        
        // Menampilkan tulisan judul tiap kolom tabel
        String[] header = {"Id Rental", "Barang", "Jumlah", "Merk Barang", "Tgl Pinjam", "Tgl Kembali", "Lama Pinjam", "Telat", "Kembali", "Denda", "NPM"};
        model = new DefaultTableModel(header,0);
        tabelAdmin.setModel(model);
        
        // Menjalankan fungsi tampil
        tampil();
    }
    
   
    public void tampil(){
        koneksi classKoneksi = new koneksi(); // Membuat objek koneksi yaitu 'classKoneksi'
        try{
            con = classKoneksi.getkoneksi(); // Mendapatkan koneksi SQL
            st = con.createStatement(); // Menyiapkan statement SQL untuk diisi
            rs = st.executeQuery("SELECT * FROM tb_rental"); // Menjalankan statement SQL sesuai yang diinginkan
            
            int no = 1; // Membuat variabel untuk looping fungsi di bawah ini
            while(rs.next()){
                String[] row = {rs.getString(1), rs.getString(2), rs.getString(3), rs.getString(4), rs.getString(5),
                                rs.getString(6), rs.getString(7), rs.getString(8), rs.getString(9), rs.getString(10), 
                                rs.getString(11)}; // Mendapatkan nilai dari SQL sesuai dengan letak kolom ke dalam variabel 'row'
                model.addRow(row); // Menampilkan variabel 'row' dalam bentuk tabel
                no++; // Melakukan looping
            }
            
        }catch(SQLException ex){ // Menangkap error untuk menjalankan perintah di bawah ini
            System.out.print(ex.getMessage()); 
            System.out.println("ada");
        }
    }
    
    // Memberikan batas maksimal karakter yang boleh dimasukkan pengguna
    public void jumlahchar(KeyEvent a){ 
        if(idrental.getText().length()==4){ // Memberikan batas maksimal 4 karakter 
            a.consume(); // Menandakan event telah selesai dan tidak perlu diproses lagi
            JOptionPane.showMessageDialog(null, "Masukan 4 Karakter",
                    "Peringatan",JOptionPane.WARNING_MESSAGE); // Inputan melebihi 4 karakter akan diberi Peringatan: 'Masukkan 4 Karakter'
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelAdmin = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        kembali = new javax.swing.JButton();
        idrental = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        dendatype = new javax.swing.JTextField();
        lunas = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));

        jLabel1.setBackground(new java.awt.Color(0, 0, 0));
        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setText("STATUS PEMINJAMAN");

        tabelAdmin.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        tabelAdmin.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4", "Title 5", "Title 6", "Title 7", "Title 8", "Title 9", "Title 10", "Title 11"
            }
        ));
        tabelAdmin.setGridColor(new java.awt.Color(0, 0, 0));
        tabelAdmin.setShowGrid(true);
        jScrollPane1.setViewportView(tabelAdmin);

        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setText("Masukkan id_rental yang telah dikembalikan       :");

        kembali.setBackground(new java.awt.Color(255, 255, 255));
        kembali.setForeground(new java.awt.Color(0, 0, 0));
        kembali.setText("Dilkembalikan");
        kembali.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kembaliActionPerformed(evt);
            }
        });

        idrental.setBackground(new java.awt.Color(255, 255, 255));
        idrental.setForeground(new java.awt.Color(0, 0, 0));
        idrental.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                idrentalActionPerformed(evt);
            }
        });
        idrental.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                idrentalKeyTyped(evt);
            }
        });

        jLabel3.setForeground(new java.awt.Color(0, 0, 0));
        jLabel3.setText("Masukan id_rental yang telah membayar denda  :");

        dendatype.setBackground(new java.awt.Color(255, 255, 255));
        dendatype.setForeground(new java.awt.Color(0, 0, 0));

        lunas.setBackground(new java.awt.Color(255, 255, 255));
        lunas.setForeground(new java.awt.Color(0, 0, 0));
        lunas.setText("Lunas");
        lunas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lunasActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 689, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 270, Short.MAX_VALUE))
                        .addGap(25, 25, 25)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(idrental, javax.swing.GroupLayout.DEFAULT_SIZE, 223, Short.MAX_VALUE)
                            .addComponent(dendatype))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(kembali)
                            .addComponent(lunas, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(41, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(322, 322, 322))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 367, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(kembali)
                    .addComponent(idrental, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(dendatype, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lunas))
                .addContainerGap(33, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void kembaliActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kembaliActionPerformed
        // TODO add your handling code here:
        Connection c = koneksi.getkoneksi(); // Menyambungkan koneksi dengan SQL
        
        try{
            st = c.createStatement(); // Menyiapkan statment SQL
            String id_rental = idrental.getText().toString().trim(); // Menerima input user melalui ketikkan
            System.out.println(id_rental); // Menampilkan variabel id_rental di terminal netbeans
            rs = st.executeQuery("SELECT id_Rental FROM tb_rental"); // Menjalankan statement SQL
            
            while(rs.next()){ // Lakukan perulangan setelah melewatkan baris pertama
                String id_ren = rs.getString(1); // Menerima nilai sql dari kolom pertama yaitu id_rental
                System.out.println(id_ren);  // Menampilkan variabel id_rental di terminal netbeans
                if(!id_ren.equals(id_rental)){ // Memastikan bahwa nilai variabel 'id_ren' = 'id_rental'
                }
                else{
                    // Membuat objek PreparedStatement untuk query SELECT
                    PreparedStatement st = c.prepareStatement("SELECT kembali FROM tb_rental WHERE id_rental='" + id_ren + "'"); // Memasukkan statement SQL kedalam objek var 'st'
                    ResultSet rs = st.executeQuery(); // Menjalankan statment di dalam var 'rs'
                    rs.next(); // Melewatkan satu baris SQL
                    String kembali = rs.getString(1); // Masukkan nilai sql pada kolom pertama sesuai dengan statement ke dalam var 'kembali' 
                    System.out.println(kembali); // Menampilkan variabel 'kembali' ke terminal netbeans

                    if(kembali.equals("Belum")){
                        PreparedStatement km = c.prepareStatement("UPDATE tb_rental SET kembali='Sudah' WHERE id_rental='" + id_ren + "'");
                        km.executeUpdate();
                    }
                    rs.close();
                    st.close();
                }
            }
            
            }catch(SQLException e){
                System.out.println(e);
            }
            finally{
                this.dispose();
                frmAdmin a = new frmAdmin();
                a.setVisible(true);
            }
    }//GEN-LAST:event_kembaliActionPerformed

    private void idrentalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_idrentalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_idrentalActionPerformed

    private void idrentalKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_idrentalKeyTyped
        // TODO add your handling code here:
        jumlahchar(evt);
    }//GEN-LAST:event_idrentalKeyTyped

    private void lunasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lunasActionPerformed
                Connection c = koneksi.getkoneksi();
        
        try{
            st = c.createStatement();
            String id_rental = dendatype.getText().toString().trim();
            System.out.println(id_rental);
            rs = st.executeQuery("SELECT id_Rental FROM tb_rental");
            while(rs.next()){
                String id_ren = rs.getString(1);
                System.out.println(id_ren);
                if(!id_ren.equals(id_rental)){
                }
                else{
                    // Membuat objek PreparedStatement untuk query SELECT
                    PreparedStatement km = c.prepareStatement("UPDATE tb_rental SET denda = 0 WHERE id_rental='" + id_ren + "';");
                    km.executeUpdate();
                    System.out.println(id_ren);
                    
                }
            }
            
            }catch(SQLException e){
                System.out.println(e);
            }
            finally{
                this.dispose();
                frmAdmin a = new frmAdmin();
                a.setVisible(true);
            }
    }//GEN-LAST:event_lunasActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmAdmin().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField dendatype;
    private javax.swing.JTextField idrental;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton kembali;
    private javax.swing.JButton lunas;
    private javax.swing.JTable tabelAdmin;
    // End of variables declaration//GEN-END:variables
}
